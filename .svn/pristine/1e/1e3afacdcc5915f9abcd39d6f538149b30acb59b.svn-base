//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proxy.ServiceWinToolWrite {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlowBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlowTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LgPwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressureLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RunDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkidbrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpLoadIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigCode {
            get {
                return this.ConfigCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigCodeField, value) != true)) {
                    this.ConfigCodeField = value;
                    this.RaisePropertyChanged("ConfigCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataInterval {
            get {
                return this.DataIntervalField;
            }
            set {
                if ((this.DataIntervalField.Equals(value) != true)) {
                    this.DataIntervalField = value;
                    this.RaisePropertyChanged("DataInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayFrom {
            get {
                return this.DayFromField;
            }
            set {
                if ((this.DayFromField.Equals(value) != true)) {
                    this.DayFromField = value;
                    this.RaisePropertyChanged("DayFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtuidLocation {
            get {
                return this.DtuidLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidLocationField, value) != true)) {
                    this.DtuidLocationField = value;
                    this.RaisePropertyChanged("DtuidLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtuidName {
            get {
                return this.DtuidNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidNameField, value) != true)) {
                    this.DtuidNameField = value;
                    this.RaisePropertyChanged("DtuidName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlowBrand {
            get {
                return this.FlowBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.FlowBrandField, value) != true)) {
                    this.FlowBrandField = value;
                    this.RaisePropertyChanged("FlowBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlowType {
            get {
                return this.FlowTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FlowTypeField, value) != true)) {
                    this.FlowTypeField = value;
                    this.RaisePropertyChanged("FlowType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LgPwd {
            get {
                return this.LgPwdField;
            }
            set {
                if ((object.ReferenceEquals(this.LgPwdField, value) != true)) {
                    this.LgPwdField = value;
                    this.RaisePropertyChanged("LgPwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonthFrom {
            get {
                return this.MonthFromField;
            }
            set {
                if ((this.MonthFromField.Equals(value) != true)) {
                    this.MonthFromField = value;
                    this.RaisePropertyChanged("MonthFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressureLevel {
            get {
                return this.PressureLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureLevelField, value) != true)) {
                    this.PressureLevelField = value;
                    this.RaisePropertyChanged("PressureLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolVersion {
            get {
                return this.ProtocolVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolVersionField, value) != true)) {
                    this.ProtocolVersionField = value;
                    this.RaisePropertyChanged("ProtocolVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegDate {
            get {
                return this.RegDateField;
            }
            set {
                if ((this.RegDateField.Equals(value) != true)) {
                    this.RegDateField = value;
                    this.RaisePropertyChanged("RegDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RunDate {
            get {
                return this.RunDateField;
            }
            set {
                if ((this.RunDateField.Equals(value) != true)) {
                    this.RunDateField = value;
                    this.RaisePropertyChanged("RunDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skidbrand {
            get {
                return this.SkidbrandField;
            }
            set {
                if ((object.ReferenceEquals(this.SkidbrandField, value) != true)) {
                    this.SkidbrandField = value;
                    this.RaisePropertyChanged("Skidbrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpLoadInterval {
            get {
                return this.UpLoadIntervalField;
            }
            set {
                if ((this.UpLoadIntervalField.Equals(value) != true)) {
                    this.UpLoadIntervalField = value;
                    this.RaisePropertyChanged("UpLoadInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_PressureLevel", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_PressureLevel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressureDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressureDesc {
            get {
                return this.PressureDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureDescField, value) != true)) {
                    this.PressureDescField = value;
                    this.RaisePropertyChanged("PressureDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressureName {
            get {
                return this.PressureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureNameField, value) != true)) {
                    this.PressureNameField = value;
                    this.RaisePropertyChanged("PressureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmReStatus", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    public enum EmReStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        fail = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        error = -2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        noData = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        invalid = -3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        serverNoReply = -4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        logFail = -5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        exception = -6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_FieldDesc", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_FieldDesc : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldShortDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HighlimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HihilimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsCollectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsShowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LololimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LowlimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueInOrOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueMinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColName {
            get {
                return this.ColNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColNameField, value) != true)) {
                    this.ColNameField = value;
                    this.RaisePropertyChanged("ColName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldDesc {
            get {
                return this.FieldDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldDescField, value) != true)) {
                    this.FieldDescField = value;
                    this.RaisePropertyChanged("FieldDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldShortDesc {
            get {
                return this.FieldShortDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldShortDescField, value) != true)) {
                    this.FieldShortDescField = value;
                    this.RaisePropertyChanged("FieldShortDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((this.FieldTypeField.Equals(value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldUnit {
            get {
                return this.FieldUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldUnitField, value) != true)) {
                    this.FieldUnitField = value;
                    this.RaisePropertyChanged("FieldUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Highlimit {
            get {
                return this.HighlimitField;
            }
            set {
                if ((this.HighlimitField.Equals(value) != true)) {
                    this.HighlimitField = value;
                    this.RaisePropertyChanged("Highlimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Hihilimit {
            get {
                return this.HihilimitField;
            }
            set {
                if ((this.HihilimitField.Equals(value) != true)) {
                    this.HihilimitField = value;
                    this.RaisePropertyChanged("Hihilimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAlert {
            get {
                return this.IsAlertField;
            }
            set {
                if ((this.IsAlertField.Equals(value) != true)) {
                    this.IsAlertField = value;
                    this.RaisePropertyChanged("IsAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsCollect {
            get {
                return this.IsCollectField;
            }
            set {
                if ((this.IsCollectField.Equals(value) != true)) {
                    this.IsCollectField = value;
                    this.RaisePropertyChanged("IsCollect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsShow {
            get {
                return this.IsShowField;
            }
            set {
                if ((this.IsShowField.Equals(value) != true)) {
                    this.IsShowField = value;
                    this.RaisePropertyChanged("IsShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyValues {
            get {
                return this.KeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyValuesField, value) != true)) {
                    this.KeyValuesField = value;
                    this.RaisePropertyChanged("KeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Lololimit {
            get {
                return this.LololimitField;
            }
            set {
                if ((this.LololimitField.Equals(value) != true)) {
                    this.LololimitField = value;
                    this.RaisePropertyChanged("Lololimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Lowlimit {
            get {
                return this.LowlimitField;
            }
            set {
                if ((this.LowlimitField.Equals(value) != true)) {
                    this.LowlimitField = value;
                    this.RaisePropertyChanged("Lowlimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueInOrOut {
            get {
                return this.ValueInOrOutField;
            }
            set {
                if ((this.ValueInOrOutField.Equals(value) != true)) {
                    this.ValueInOrOutField = value;
                    this.RaisePropertyChanged("ValueInOrOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValueMax {
            get {
                return this.ValueMaxField;
            }
            set {
                if ((this.ValueMaxField.Equals(value) != true)) {
                    this.ValueMaxField = value;
                    this.RaisePropertyChanged("ValueMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValueMin {
            get {
                return this.ValueMinField;
            }
            set {
                if ((this.ValueMinField.Equals(value) != true)) {
                    this.ValueMinField = value;
                    this.RaisePropertyChanged("ValueMin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_ValveEffect", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_ValveEffect : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClosedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EffctAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EffctUserNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValveCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValveNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClosedTime {
            get {
                return this.ClosedTimeField;
            }
            set {
                if ((this.ClosedTimeField.Equals(value) != true)) {
                    this.ClosedTimeField = value;
                    this.RaisePropertyChanged("ClosedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EffctArea {
            get {
                return this.EffctAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.EffctAreaField, value) != true)) {
                    this.EffctAreaField = value;
                    this.RaisePropertyChanged("EffctArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EffctUserNum {
            get {
                return this.EffctUserNumField;
            }
            set {
                if ((this.EffctUserNumField.Equals(value) != true)) {
                    this.EffctUserNumField = value;
                    this.RaisePropertyChanged("EffctUserNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValveCode {
            get {
                return this.ValveCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValveCodeField, value) != true)) {
                    this.ValveCodeField = value;
                    this.RaisePropertyChanged("ValveCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValveName {
            get {
                return this.ValveNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ValveNameField, value) != true)) {
                    this.ValveNameField = value;
                    this.RaisePropertyChanged("ValveName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_User_Group", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_User_Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupDesc {
            get {
                return this.GroupDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescField, value) != true)) {
                    this.GroupDescField = value;
                    this.RaisePropertyChanged("GroupDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCode {
            get {
                return this.ParentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCodeField, value) != true)) {
                    this.ParentCodeField = value;
                    this.RaisePropertyChanged("ParentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_User_Config", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_User_Config : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsRptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PopCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoftIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCode {
            get {
                return this.CCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CCodeField, value) != true)) {
                    this.CCodeField = value;
                    this.RaisePropertyChanged("CCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigDesc {
            get {
                return this.ConfigDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigDescField, value) != true)) {
                    this.ConfigDescField = value;
                    this.RaisePropertyChanged("ConfigDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAlert {
            get {
                return this.IsAlertField;
            }
            set {
                if ((this.IsAlertField.Equals(value) != true)) {
                    this.IsAlertField = value;
                    this.RaisePropertyChanged("IsAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsRpt {
            get {
                return this.IsRptField;
            }
            set {
                if ((this.IsRptField.Equals(value) != true)) {
                    this.IsRptField = value;
                    this.RaisePropertyChanged("IsRpt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PopCode {
            get {
                return this.PopCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PopCodeField, value) != true)) {
                    this.PopCodeField = value;
                    this.RaisePropertyChanged("PopCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoftInterval {
            get {
                return this.SoftIntervalField;
            }
            set {
                if ((this.SoftIntervalField.Equals(value) != true)) {
                    this.SoftIntervalField = value;
                    this.RaisePropertyChanged("SoftInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_User_UserDtuid", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_User_UserDtuid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_Config", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_Config : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AINumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoardInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DINumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AINum {
            get {
                return this.AINumField;
            }
            set {
                if ((this.AINumField.Equals(value) != true)) {
                    this.AINumField = value;
                    this.RaisePropertyChanged("AINum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoardInfo {
            get {
                return this.BoardInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardInfoField, value) != true)) {
                    this.BoardInfoField = value;
                    this.RaisePropertyChanged("BoardInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CType {
            get {
                return this.CTypeField;
            }
            set {
                if ((this.CTypeField.Equals(value) != true)) {
                    this.CTypeField = value;
                    this.RaisePropertyChanged("CType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigCode {
            get {
                return this.ConfigCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigCodeField, value) != true)) {
                    this.ConfigCodeField = value;
                    this.RaisePropertyChanged("ConfigCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigDesc {
            get {
                return this.ConfigDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigDescField, value) != true)) {
                    this.ConfigDescField = value;
                    this.RaisePropertyChanged("ConfigDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DINum {
            get {
                return this.DINumField;
            }
            set {
                if ((this.DINumField.Equals(value) != true)) {
                    this.DINumField = value;
                    this.RaisePropertyChanged("DINum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlowNum {
            get {
                return this.FlowNumField;
            }
            set {
                if ((this.FlowNumField.Equals(value) != true)) {
                    this.FlowNumField = value;
                    this.RaisePropertyChanged("FlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAlert {
            get {
                return this.IsAlertField;
            }
            set {
                if ((this.IsAlertField.Equals(value) != true)) {
                    this.IsAlertField = value;
                    this.RaisePropertyChanged("IsAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsCreate {
            get {
                return this.IsCreateField;
            }
            set {
                if ((this.IsCreateField.Equals(value) != true)) {
                    this.IsCreateField = value;
                    this.RaisePropertyChanged("IsCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_Group", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupDesc {
            get {
                return this.GroupDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescField, value) != true)) {
                    this.GroupDescField = value;
                    this.RaisePropertyChanged("GroupDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCode {
            get {
                return this.ParentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCodeField, value) != true)) {
                    this.ParentCodeField = value;
                    this.RaisePropertyChanged("ParentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_Device", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_Device : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceSupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ProduceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceBrandField, value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceParams {
            get {
                return this.DeviceParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceParamsField, value) != true)) {
                    this.DeviceParamsField = value;
                    this.RaisePropertyChanged("DeviceParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceSN {
            get {
                return this.DeviceSNField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceSNField, value) != true)) {
                    this.DeviceSNField = value;
                    this.RaisePropertyChanged("DeviceSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceSupplier {
            get {
                return this.DeviceSupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceSupplierField, value) != true)) {
                    this.DeviceSupplierField = value;
                    this.RaisePropertyChanged("DeviceSupplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelCode {
            get {
                return this.ModelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelCodeField, value) != true)) {
                    this.ModelCodeField = value;
                    this.RaisePropertyChanged("ModelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProduceDate {
            get {
                return this.ProduceDateField;
            }
            set {
                if ((this.ProduceDateField.Equals(value) != true)) {
                    this.ProduceDateField = value;
                    this.RaisePropertyChanged("ProduceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceWinToolWrite.IWinfoToolServiceWrite")]
    public interface IWinfoToolServiceWrite {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DoWork", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/UpdateSite", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/UpdateSiteResponse")]
        bool UpdateSite(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU dtu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddSite", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddSiteResponse")]
        bool AddSite(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU dtu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/GenerateSiteCode", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/GenerateSiteCodeResponse")]
        System.Collections.Generic.List<string> GenerateSiteCode(string ActiveKey, string UserId, string CompanyId, int Num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DeleteSite", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DeleteSiteResponse")]
        bool DeleteSite(string ActiveKey, string DtuId, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddLevel", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddLevelResponse")]
        Proxy.ServiceWinToolWrite.EmReStatus AddLevel(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU_PressureLevel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddFiled", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddFiledResponse")]
        bool AddFiled(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU_FieldDesc model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/EditFiled", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/EditFiledResponse")]
        bool EditFiled(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU_FieldDesc model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddInfluence", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddInfluenceResponse")]
        bool AddInfluence(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_ValveEffect Tdv);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/UpdateInfluence", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/UpdateInfluenceResponse")]
        bool UpdateInfluence(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_ValveEffect Tdv, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DeleteInfluence", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DeleteInfluenceResponse")]
        bool DeleteInfluence(string ActiveKey, string ValveCode, string UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddGroup", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddGroupResponse")]
        bool AddGroup(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_Group model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/UpdateGroup", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/UpdateGroupResponse")]
        bool UpdateGroup(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_Group model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DeleteGroup", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DeleteGroupResponse")]
        bool DeleteGroup(string ActiveKey, string groupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddUserConfig", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddUserConfigResponse")]
        bool AddUserConfig(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_Config model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/UpdateUserConfig", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/UpdateUserConfigResponse")]
        bool UpdateUserConfig(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_Config model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DeleteUserConfig", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DeleteUserConfigResponse")]
        bool DeleteUserConfig(string ActiveKey, string CCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddDTUUser", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddDTUUserResponse")]
        bool AddDTUUser(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_UserDtuid model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DeleteDTUUser", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DeleteDTUUserResponse")]
        bool DeleteDTUUser(string ActiveKey, string UserId, string Dtuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddDtuConfig", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddDtuConfigResponse")]
        bool AddDtuConfig(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Config model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/UpdateDtuConfig", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/UpdateDtuConfigResponse")]
        bool UpdateDtuConfig(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Config config);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DeleteDtuConfig", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DeleteDtuConfigResponse")]
        bool DeleteDtuConfig(string ActiveKey, string configCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddSiteGroup", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddSiteGroupResponse")]
        bool AddSiteGroup(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Group model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/UpdateSiteGroup", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/UpdateSiteGroupResponse")]
        bool UpdateSiteGroup(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Group model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DeleteSiteGroup", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DeleteSiteGroupResponse")]
        bool DeleteSiteGroup(string ActiveKey, string groupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/AddVIPDevice", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/AddVIPDeviceResponse")]
        bool AddVIPDevice(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Device model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/UpdateVIPDevice", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/UpdateVIPDeviceResponse")]
        bool UpdateVIPDevice(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Device model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceWrite/DeleteVIPDevice", ReplyAction="http://tempuri.org/IWinfoToolServiceWrite/DeleteVIPDeviceResponse")]
        bool DeleteVIPDevice(string ActiveKey, int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWinfoToolServiceWriteChannel : Proxy.ServiceWinToolWrite.IWinfoToolServiceWrite, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WinfoToolServiceWriteClient : System.ServiceModel.ClientBase<Proxy.ServiceWinToolWrite.IWinfoToolServiceWrite>, Proxy.ServiceWinToolWrite.IWinfoToolServiceWrite {
        
        public WinfoToolServiceWriteClient() {
        }
        
        public WinfoToolServiceWriteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WinfoToolServiceWriteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WinfoToolServiceWriteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WinfoToolServiceWriteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public bool UpdateSite(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU dtu) {
            return base.Channel.UpdateSite(ActiveKey, UserId, dtu);
        }
        
        public bool AddSite(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU dtu) {
            return base.Channel.AddSite(ActiveKey, UserId, dtu);
        }
        
        public System.Collections.Generic.List<string> GenerateSiteCode(string ActiveKey, string UserId, string CompanyId, int Num) {
            return base.Channel.GenerateSiteCode(ActiveKey, UserId, CompanyId, Num);
        }
        
        public bool DeleteSite(string ActiveKey, string DtuId, string UserId) {
            return base.Channel.DeleteSite(ActiveKey, DtuId, UserId);
        }
        
        public Proxy.ServiceWinToolWrite.EmReStatus AddLevel(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU_PressureLevel model) {
            return base.Channel.AddLevel(ActiveKey, UserId, model);
        }
        
        public bool AddFiled(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU_FieldDesc model) {
            return base.Channel.AddFiled(ActiveKey, UserId, model);
        }
        
        public bool EditFiled(string ActiveKey, string UserId, Proxy.ServiceWinToolWrite.T_DTU_FieldDesc model) {
            return base.Channel.EditFiled(ActiveKey, UserId, model);
        }
        
        public bool AddInfluence(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_ValveEffect Tdv) {
            return base.Channel.AddInfluence(ActiveKey, Tdv);
        }
        
        public bool UpdateInfluence(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_ValveEffect Tdv, string UserId) {
            return base.Channel.UpdateInfluence(ActiveKey, Tdv, UserId);
        }
        
        public bool DeleteInfluence(string ActiveKey, string ValveCode, string UserId) {
            return base.Channel.DeleteInfluence(ActiveKey, ValveCode, UserId);
        }
        
        public bool AddGroup(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_Group model) {
            return base.Channel.AddGroup(ActiveKey, model);
        }
        
        public bool UpdateGroup(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_Group model) {
            return base.Channel.UpdateGroup(ActiveKey, model);
        }
        
        public bool DeleteGroup(string ActiveKey, string groupCode) {
            return base.Channel.DeleteGroup(ActiveKey, groupCode);
        }
        
        public bool AddUserConfig(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_Config model) {
            return base.Channel.AddUserConfig(ActiveKey, model);
        }
        
        public bool UpdateUserConfig(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_Config model) {
            return base.Channel.UpdateUserConfig(ActiveKey, model);
        }
        
        public bool DeleteUserConfig(string ActiveKey, string CCode) {
            return base.Channel.DeleteUserConfig(ActiveKey, CCode);
        }
        
        public bool AddDTUUser(string ActiveKey, Proxy.ServiceWinToolWrite.T_User_UserDtuid model) {
            return base.Channel.AddDTUUser(ActiveKey, model);
        }
        
        public bool DeleteDTUUser(string ActiveKey, string UserId, string Dtuid) {
            return base.Channel.DeleteDTUUser(ActiveKey, UserId, Dtuid);
        }
        
        public bool AddDtuConfig(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Config model) {
            return base.Channel.AddDtuConfig(ActiveKey, model);
        }
        
        public bool UpdateDtuConfig(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Config config) {
            return base.Channel.UpdateDtuConfig(ActiveKey, config);
        }
        
        public bool DeleteDtuConfig(string ActiveKey, string configCode) {
            return base.Channel.DeleteDtuConfig(ActiveKey, configCode);
        }
        
        public bool AddSiteGroup(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Group model) {
            return base.Channel.AddSiteGroup(ActiveKey, model);
        }
        
        public bool UpdateSiteGroup(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Group model) {
            return base.Channel.UpdateSiteGroup(ActiveKey, model);
        }
        
        public bool DeleteSiteGroup(string ActiveKey, string groupCode) {
            return base.Channel.DeleteSiteGroup(ActiveKey, groupCode);
        }
        
        public bool AddVIPDevice(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Device model) {
            return base.Channel.AddVIPDevice(ActiveKey, model);
        }
        
        public bool UpdateVIPDevice(string ActiveKey, Proxy.ServiceWinToolWrite.T_DTU_Device model) {
            return base.Channel.UpdateVIPDevice(ActiveKey, model);
        }
        
        public bool DeleteVIPDevice(string ActiveKey, int id) {
            return base.Channel.DeleteVIPDevice(ActiveKey, id);
        }
    }
}
