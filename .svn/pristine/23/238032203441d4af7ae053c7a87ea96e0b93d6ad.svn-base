using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.Mvc;
using Com.Winfotian.Proxy;
using WinfoToolSys.Pms;
using Proxy;
using Proxy.ServiceWinToolWrite;


namespace WinfoToolSys.Controllers.SiteMng
{
    public class SiteSetMalodorController : Controller
    {

        public ActionResult Index()
        {
            return View();
        }

        //根据配置名称查询
        public JsonResult GetSiteSetList(string configName)
        {
            return Json(ServcieTool.WinToolServiceReadInstance.GetDtuMalodorListByConfigName("", configName));
        }

        //添加、详细、修改页面
        public ActionResult ShowDetail(string oper, string configId)
        {
            StringBuilder sb = new StringBuilder();
            var model = ServcieTool.WinToolServiceReadInstance.GetDtuConfigByCode("", configId);

            switch (oper)
            {
                case "Show":
                    ViewBag.Oper = "Show";
                    break;
                case "Edit":
                    ViewBag.Oper = "Edit";
                    sb.Append("<input type='button' class='buttonVer2' value='修改' onclick='Malodor.Update();' />");
                    break;
                case "Add":
                    ViewBag.Oper = "Add";
                    sb.Append("<input type='button' class='buttonVer2' value='添加' onclick='Malodor.Add();' />");
                    break;
                default:
                    break;
            }
            sb.Insert(0, "\"");
            sb.Append("\"");
            ViewBag.Button = sb.ToString();
            return View(model);
        }

        //添加
        public string Add(T_DTU_Config model)
        {
            string result = "false";
            T_DTU_Config config = new T_DTU_Config();
            string configCode = "" + DateTime.Now.Year + DateTime.Now.Month + DateTime.Now.Day + DateTime.Now.Hour + DateTime.Now.Minute + DateTime.Now.Second + DateTime.Now.Millisecond;
            config.ConfigCode = configCode;
            config.ConfigName = model.ConfigName;
            config.ConfigDesc = model.ConfigDesc;
            config.FlowNum = model.FlowNum;
            config.AINum = model.AINum;
            config.DINum = model.DINum;
            config.IsAlert = model.IsAlert;
            config.IsCreate = model.IsCreate;
            config.Status = 1;
            config.UpdateFlag = 1;
            config.BoardInfo = model.BoardInfo;
            config.CType = 1;

            if (ServcieTool.WinToolServiceWriteInstance.AddDtuConfig("", config))
            {
                result = "true";
            }
            return result;
        }

        //修改
        public string Update(T_DTU_Config model)
        {
            string result = "false";
            T_DTU_Config config = new T_DTU_Config();
            config.ConfigCode = model.ConfigCode;
            config.ConfigName = model.ConfigName;
            config.ConfigDesc = model.ConfigDesc;
            config.FlowNum = model.FlowNum;
            config.AINum = model.AINum;
            config.DINum = model.DINum;
            config.IsAlert = model.IsAlert;
            config.IsCreate = model.IsCreate;
            config.Status = 1;
            config.UpdateFlag = 1;
            config.BoardInfo = model.BoardInfo;
            config.CType = 1;

            if (ServcieTool.WinToolServiceWriteInstance.UpdateDtuConfig("", config))
            {
                result = "true";
            }
            return result;
        }

        //删除
        public string Delete(string configCode)
        {
            string result = "false";
            if (ServcieTool.WinToolServiceWriteInstance.DeleteDtuConfig("", configCode))
            {
                result = "true";
            }
            return result;
        }
    }
}
