//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Com.winfotian.Authorize.CrmPostService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Companys", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class T_Companys : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmpWebSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobilePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelphoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityID {
            get {
                return this.CityIDField;
            }
            set {
                if ((this.CityIDField.Equals(value) != true)) {
                    this.CityIDField = value;
                    this.RaisePropertyChanged("CityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmpAddress {
            get {
                return this.CmpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CmpAddressField, value) != true)) {
                    this.CmpAddressField = value;
                    this.RaisePropertyChanged("CmpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmpWebSite {
            get {
                return this.CmpWebSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.CmpWebSiteField, value) != true)) {
                    this.CmpWebSiteField = value;
                    this.RaisePropertyChanged("CmpWebSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxTel {
            get {
                return this.FaxTelField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxTelField, value) != true)) {
                    this.FaxTelField = value;
                    this.RaisePropertyChanged("FaxTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkPerson {
            get {
                return this.LinkPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkPersonField, value) != true)) {
                    this.LinkPersonField = value;
                    this.RaisePropertyChanged("LinkPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logo {
            get {
                return this.LogoField;
            }
            set {
                if ((object.ReferenceEquals(this.LogoField, value) != true)) {
                    this.LogoField = value;
                    this.RaisePropertyChanged("Logo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobilePhone {
            get {
                return this.MobilePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.MobilePhoneField, value) != true)) {
                    this.MobilePhoneField = value;
                    this.RaisePropertyChanged("MobilePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCompanyID {
            get {
                return this.ParentCompanyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCompanyIDField, value) != true)) {
                    this.ParentCompanyIDField = value;
                    this.RaisePropertyChanged("ParentCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telphone {
            get {
                return this.TelphoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelphoneField, value) != true)) {
                    this.TelphoneField = value;
                    this.RaisePropertyChanged("Telphone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_RegisterInfo", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class T_RegisterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPwdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCode {
            get {
                return this.BillCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCodeField, value) != true)) {
                    this.BillCodeField = value;
                    this.RaisePropertyChanged("BillCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCode {
            get {
                return this.CCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CCodeField, value) != true)) {
                    this.CCodeField = value;
                    this.RaisePropertyChanged("CCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeName {
            get {
                return this.EmployeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNameField, value) != true)) {
                    this.EmployeeNameField = value;
                    this.RaisePropertyChanged("EmployeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExitTime {
            get {
                return this.ExitTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExitTimeField, value) != true)) {
                    this.ExitTimeField = value;
                    this.RaisePropertyChanged("ExitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginIP {
            get {
                return this.LoginIPField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIPField, value) != true)) {
                    this.LoginIPField = value;
                    this.RaisePropertyChanged("LoginIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginTime {
            get {
                return this.LoginTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginTimeField, value) != true)) {
                    this.LoginTimeField = value;
                    this.RaisePropertyChanged("LoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentUserName {
            get {
                return this.ParentUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentUserNameField, value) != true)) {
                    this.ParentUserNameField = value;
                    this.RaisePropertyChanged("ParentUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPwd {
            get {
                return this.UserPwdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPwdField, value) != true)) {
                    this.UserPwdField = value;
                    this.RaisePropertyChanged("UserPwd");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CrmPostService.ICRMSPost")]
    public interface ICRMSPost {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_CompanyInfo/UpLaod", ReplyAction="http://tempuri.org/IT_CompanyInfo/UpLaodResponse")]
        void UpLaod(string source, string Path, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_CompanyInfo/UpLaod", ReplyAction="http://tempuri.org/IT_CompanyInfo/UpLaodResponse")]
        System.Threading.Tasks.Task UpLaodAsync(string source, string Path, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_CompanyInfo/RegisterCompanyInfo", ReplyAction="http://tempuri.org/IT_CompanyInfo/RegisterCompanyInfoResponse")]
        string RegisterCompanyInfo(Com.winfotian.Authorize.CrmPostService.T_Companys T, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_CompanyInfo/RegisterCompanyInfo", ReplyAction="http://tempuri.org/IT_CompanyInfo/RegisterCompanyInfoResponse")]
        System.Threading.Tasks.Task<string> RegisterCompanyInfoAsync(Com.winfotian.Authorize.CrmPostService.T_Companys T, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_CompanyInfo/ChangeCompanyInfo", ReplyAction="http://tempuri.org/IT_CompanyInfo/ChangeCompanyInfoResponse")]
        string ChangeCompanyInfo(Com.winfotian.Authorize.CrmPostService.T_Companys T, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_CompanyInfo/ChangeCompanyInfo", ReplyAction="http://tempuri.org/IT_CompanyInfo/ChangeCompanyInfoResponse")]
        System.Threading.Tasks.Task<string> ChangeCompanyInfoAsync(Com.winfotian.Authorize.CrmPostService.T_Companys T, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_RegisterUser/RegisterUser", ReplyAction="http://tempuri.org/IT_RegisterUser/RegisterUserResponse")]
        string RegisterUser(Com.winfotian.Authorize.CrmPostService.T_RegisterInfo T, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_RegisterUser/RegisterUser", ReplyAction="http://tempuri.org/IT_RegisterUser/RegisterUserResponse")]
        System.Threading.Tasks.Task<string> RegisterUserAsync(Com.winfotian.Authorize.CrmPostService.T_RegisterInfo T, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_RegisterUser/ChangeUserConfigUp", ReplyAction="http://tempuri.org/IT_RegisterUser/ChangeUserConfigUpResponse")]
        string ChangeUserConfigUp(string UserName, string CCode, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_RegisterUser/ChangeUserConfigUp", ReplyAction="http://tempuri.org/IT_RegisterUser/ChangeUserConfigUpResponse")]
        System.Threading.Tasks.Task<string> ChangeUserConfigUpAsync(string UserName, string CCode, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_RegisterUser/ChangePassword", ReplyAction="http://tempuri.org/IT_RegisterUser/ChangePasswordResponse")]
        string ChangePassword(string UserName, string YPwd, string XPwd, string GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IT_RegisterUser/ChangePassword", ReplyAction="http://tempuri.org/IT_RegisterUser/ChangePasswordResponse")]
        System.Threading.Tasks.Task<string> ChangePasswordAsync(string UserName, string YPwd, string XPwd, string GUID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICRMSPostChannel : Com.winfotian.Authorize.CrmPostService.ICRMSPost, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CRMSPostClient : System.ServiceModel.ClientBase<Com.winfotian.Authorize.CrmPostService.ICRMSPost>, Com.winfotian.Authorize.CrmPostService.ICRMSPost {
        
        public CRMSPostClient() {
        }
        
        public CRMSPostClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CRMSPostClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRMSPostClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CRMSPostClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UpLaod(string source, string Path, string GUID) {
            base.Channel.UpLaod(source, Path, GUID);
        }
        
        public System.Threading.Tasks.Task UpLaodAsync(string source, string Path, string GUID) {
            return base.Channel.UpLaodAsync(source, Path, GUID);
        }
        
        public string RegisterCompanyInfo(Com.winfotian.Authorize.CrmPostService.T_Companys T, string GUID) {
            return base.Channel.RegisterCompanyInfo(T, GUID);
        }
        
        public System.Threading.Tasks.Task<string> RegisterCompanyInfoAsync(Com.winfotian.Authorize.CrmPostService.T_Companys T, string GUID) {
            return base.Channel.RegisterCompanyInfoAsync(T, GUID);
        }
        
        public string ChangeCompanyInfo(Com.winfotian.Authorize.CrmPostService.T_Companys T, string GUID) {
            return base.Channel.ChangeCompanyInfo(T, GUID);
        }
        
        public System.Threading.Tasks.Task<string> ChangeCompanyInfoAsync(Com.winfotian.Authorize.CrmPostService.T_Companys T, string GUID) {
            return base.Channel.ChangeCompanyInfoAsync(T, GUID);
        }
        
        public string RegisterUser(Com.winfotian.Authorize.CrmPostService.T_RegisterInfo T, string GUID) {
            return base.Channel.RegisterUser(T, GUID);
        }
        
        public System.Threading.Tasks.Task<string> RegisterUserAsync(Com.winfotian.Authorize.CrmPostService.T_RegisterInfo T, string GUID) {
            return base.Channel.RegisterUserAsync(T, GUID);
        }
        
        public string ChangeUserConfigUp(string UserName, string CCode, string GUID) {
            return base.Channel.ChangeUserConfigUp(UserName, CCode, GUID);
        }
        
        public System.Threading.Tasks.Task<string> ChangeUserConfigUpAsync(string UserName, string CCode, string GUID) {
            return base.Channel.ChangeUserConfigUpAsync(UserName, CCode, GUID);
        }
        
        public string ChangePassword(string UserName, string YPwd, string XPwd, string GUID) {
            return base.Channel.ChangePassword(UserName, YPwd, XPwd, GUID);
        }
        
        public System.Threading.Tasks.Task<string> ChangePasswordAsync(string UserName, string YPwd, string XPwd, string GUID) {
            return base.Channel.ChangePasswordAsync(UserName, YPwd, XPwd, GUID);
        }
    }
}
