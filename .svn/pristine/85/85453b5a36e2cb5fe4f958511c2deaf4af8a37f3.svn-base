//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18052
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proxy.ServiceWinToolRead {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_CityInfo", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_CityInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneCode {
            get {
                return this.PhoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneCodeField, value) != true)) {
                    this.PhoneCodeField = value;
                    this.RaisePropertyChanged("PhoneCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Company", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Proxy.ServiceWinToolRead.T_CompanyExtension))]
    public partial class T_Company : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmpDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmpEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmpMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmpTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CmpWebSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxTelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmpAddress {
            get {
                return this.CmpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.CmpAddressField, value) != true)) {
                    this.CmpAddressField = value;
                    this.RaisePropertyChanged("CmpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmpDesc {
            get {
                return this.CmpDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CmpDescField, value) != true)) {
                    this.CmpDescField = value;
                    this.RaisePropertyChanged("CmpDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmpEmail {
            get {
                return this.CmpEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.CmpEmailField, value) != true)) {
                    this.CmpEmailField = value;
                    this.RaisePropertyChanged("CmpEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmpMobile {
            get {
                return this.CmpMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.CmpMobileField, value) != true)) {
                    this.CmpMobileField = value;
                    this.RaisePropertyChanged("CmpMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmpTel {
            get {
                return this.CmpTelField;
            }
            set {
                if ((object.ReferenceEquals(this.CmpTelField, value) != true)) {
                    this.CmpTelField = value;
                    this.RaisePropertyChanged("CmpTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmpWebSite {
            get {
                return this.CmpWebSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.CmpWebSiteField, value) != true)) {
                    this.CmpWebSiteField = value;
                    this.RaisePropertyChanged("CmpWebSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxTel {
            get {
                return this.FaxTelField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxTelField, value) != true)) {
                    this.FaxTelField = value;
                    this.RaisePropertyChanged("FaxTel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkPerson {
            get {
                return this.LinkPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkPersonField, value) != true)) {
                    this.LinkPersonField = value;
                    this.RaisePropertyChanged("LinkPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_CompanyExtension", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_CompanyExtension : Proxy.ServiceWinToolRead.T_Company {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Oper {
            get {
                return this.OperField;
            }
            set {
                if ((object.ReferenceEquals(this.OperField, value) != true)) {
                    this.OperField = value;
                    this.RaisePropertyChanged("Oper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Company_Config", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_Company_Config : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ConfigIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientNum {
            get {
                return this.ClientNumField;
            }
            set {
                if ((this.ClientNumField.Equals(value) != true)) {
                    this.ClientNumField = value;
                    this.RaisePropertyChanged("ClientNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientType {
            get {
                return this.ClientTypeField;
            }
            set {
                if ((this.ClientTypeField.Equals(value) != true)) {
                    this.ClientTypeField = value;
                    this.RaisePropertyChanged("ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigDesc {
            get {
                return this.ConfigDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigDescField, value) != true)) {
                    this.ConfigDescField = value;
                    this.RaisePropertyChanged("ConfigDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ConfigId {
            get {
                return this.ConfigIdField;
            }
            set {
                if ((this.ConfigIdField.Equals(value) != true)) {
                    this.ConfigIdField = value;
                    this.RaisePropertyChanged("ConfigId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_Dtu_Ex", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_Dtu_Ex : Proxy.ServiceWinToolRead.T_DTU {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Proxy.ServiceWinToolRead.T_Dtu_Ex))]
    public partial class T_DTU : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DataIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DayFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlowBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlowTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LgPwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MonthFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressureLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RunDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkidbrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpLoadIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigCode {
            get {
                return this.ConfigCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigCodeField, value) != true)) {
                    this.ConfigCodeField = value;
                    this.RaisePropertyChanged("ConfigCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataInterval {
            get {
                return this.DataIntervalField;
            }
            set {
                if ((this.DataIntervalField.Equals(value) != true)) {
                    this.DataIntervalField = value;
                    this.RaisePropertyChanged("DataInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DayFrom {
            get {
                return this.DayFromField;
            }
            set {
                if ((this.DayFromField.Equals(value) != true)) {
                    this.DayFromField = value;
                    this.RaisePropertyChanged("DayFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtuidLocation {
            get {
                return this.DtuidLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidLocationField, value) != true)) {
                    this.DtuidLocationField = value;
                    this.RaisePropertyChanged("DtuidLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtuidName {
            get {
                return this.DtuidNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidNameField, value) != true)) {
                    this.DtuidNameField = value;
                    this.RaisePropertyChanged("DtuidName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlowBrand {
            get {
                return this.FlowBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.FlowBrandField, value) != true)) {
                    this.FlowBrandField = value;
                    this.RaisePropertyChanged("FlowBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlowType {
            get {
                return this.FlowTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FlowTypeField, value) != true)) {
                    this.FlowTypeField = value;
                    this.RaisePropertyChanged("FlowType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LgPwd {
            get {
                return this.LgPwdField;
            }
            set {
                if ((object.ReferenceEquals(this.LgPwdField, value) != true)) {
                    this.LgPwdField = value;
                    this.RaisePropertyChanged("LgPwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MonthFrom {
            get {
                return this.MonthFromField;
            }
            set {
                if ((this.MonthFromField.Equals(value) != true)) {
                    this.MonthFromField = value;
                    this.RaisePropertyChanged("MonthFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNum {
            get {
                return this.PhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumField, value) != true)) {
                    this.PhoneNumField = value;
                    this.RaisePropertyChanged("PhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressureLevel {
            get {
                return this.PressureLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureLevelField, value) != true)) {
                    this.PressureLevelField = value;
                    this.RaisePropertyChanged("PressureLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolVersion {
            get {
                return this.ProtocolVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolVersionField, value) != true)) {
                    this.ProtocolVersionField = value;
                    this.RaisePropertyChanged("ProtocolVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegDate {
            get {
                return this.RegDateField;
            }
            set {
                if ((this.RegDateField.Equals(value) != true)) {
                    this.RegDateField = value;
                    this.RaisePropertyChanged("RegDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RunDate {
            get {
                return this.RunDateField;
            }
            set {
                if ((this.RunDateField.Equals(value) != true)) {
                    this.RunDateField = value;
                    this.RaisePropertyChanged("RunDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skidbrand {
            get {
                return this.SkidbrandField;
            }
            set {
                if ((object.ReferenceEquals(this.SkidbrandField, value) != true)) {
                    this.SkidbrandField = value;
                    this.RaisePropertyChanged("Skidbrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpLoadInterval {
            get {
                return this.UpLoadIntervalField;
            }
            set {
                if ((this.UpLoadIntervalField.Equals(value) != true)) {
                    this.UpLoadIntervalField = value;
                    this.RaisePropertyChanged("UpLoadInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_GroupEx", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_GroupEx : Proxy.ServiceWinToolRead.T_DTU_Group {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_Group", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Proxy.ServiceWinToolRead.T_DTU_GroupEx))]
    public partial class T_DTU_Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupDesc {
            get {
                return this.GroupDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescField, value) != true)) {
                    this.GroupDescField = value;
                    this.RaisePropertyChanged("GroupDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCode {
            get {
                return this.ParentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCodeField, value) != true)) {
                    this.ParentCodeField = value;
                    this.RaisePropertyChanged("ParentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_FieldDesc", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_FieldDesc : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldShortDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FieldTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FieldUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HighlimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal HihilimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsCollectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsShowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LololimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LowlimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ValueInOrOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueMaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueMinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColName {
            get {
                return this.ColNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColNameField, value) != true)) {
                    this.ColNameField = value;
                    this.RaisePropertyChanged("ColName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldDesc {
            get {
                return this.FieldDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldDescField, value) != true)) {
                    this.FieldDescField = value;
                    this.RaisePropertyChanged("FieldDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldShortDesc {
            get {
                return this.FieldShortDescField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldShortDescField, value) != true)) {
                    this.FieldShortDescField = value;
                    this.RaisePropertyChanged("FieldShortDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                if ((this.FieldTypeField.Equals(value) != true)) {
                    this.FieldTypeField = value;
                    this.RaisePropertyChanged("FieldType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldUnit {
            get {
                return this.FieldUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldUnitField, value) != true)) {
                    this.FieldUnitField = value;
                    this.RaisePropertyChanged("FieldUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Highlimit {
            get {
                return this.HighlimitField;
            }
            set {
                if ((this.HighlimitField.Equals(value) != true)) {
                    this.HighlimitField = value;
                    this.RaisePropertyChanged("Highlimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Hihilimit {
            get {
                return this.HihilimitField;
            }
            set {
                if ((this.HihilimitField.Equals(value) != true)) {
                    this.HihilimitField = value;
                    this.RaisePropertyChanged("Hihilimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAlert {
            get {
                return this.IsAlertField;
            }
            set {
                if ((this.IsAlertField.Equals(value) != true)) {
                    this.IsAlertField = value;
                    this.RaisePropertyChanged("IsAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsCollect {
            get {
                return this.IsCollectField;
            }
            set {
                if ((this.IsCollectField.Equals(value) != true)) {
                    this.IsCollectField = value;
                    this.RaisePropertyChanged("IsCollect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsShow {
            get {
                return this.IsShowField;
            }
            set {
                if ((this.IsShowField.Equals(value) != true)) {
                    this.IsShowField = value;
                    this.RaisePropertyChanged("IsShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyValues {
            get {
                return this.KeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyValuesField, value) != true)) {
                    this.KeyValuesField = value;
                    this.RaisePropertyChanged("KeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Lololimit {
            get {
                return this.LololimitField;
            }
            set {
                if ((this.LololimitField.Equals(value) != true)) {
                    this.LololimitField = value;
                    this.RaisePropertyChanged("Lololimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Lowlimit {
            get {
                return this.LowlimitField;
            }
            set {
                if ((this.LowlimitField.Equals(value) != true)) {
                    this.LowlimitField = value;
                    this.RaisePropertyChanged("Lowlimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ValueInOrOut {
            get {
                return this.ValueInOrOutField;
            }
            set {
                if ((this.ValueInOrOutField.Equals(value) != true)) {
                    this.ValueInOrOutField = value;
                    this.RaisePropertyChanged("ValueInOrOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValueMax {
            get {
                return this.ValueMaxField;
            }
            set {
                if ((this.ValueMaxField.Equals(value) != true)) {
                    this.ValueMaxField = value;
                    this.RaisePropertyChanged("ValueMax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ValueMin {
            get {
                return this.ValueMinField;
            }
            set {
                if ((this.ValueMinField.Equals(value) != true)) {
                    this.ValueMinField = value;
                    this.RaisePropertyChanged("ValueMin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_User_GroupExt", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_User_GroupExt : Proxy.ServiceWinToolRead.T_User_Group {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_User_Group", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Proxy.ServiceWinToolRead.T_User_GroupExt))]
    public partial class T_User_Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupDesc {
            get {
                return this.GroupDescField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupDescField, value) != true)) {
                    this.GroupDescField = value;
                    this.RaisePropertyChanged("GroupDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCode {
            get {
                return this.ParentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCodeField, value) != true)) {
                    this.ParentCodeField = value;
                    this.RaisePropertyChanged("ParentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_User_Info", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_User_Info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BillCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkAddrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrueNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPwdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BillCode {
            get {
                return this.BillCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BillCodeField, value) != true)) {
                    this.BillCodeField = value;
                    this.RaisePropertyChanged("BillCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDay {
            get {
                return this.BirthDayField;
            }
            set {
                if ((this.BirthDayField.Equals(value) != true)) {
                    this.BirthDayField = value;
                    this.RaisePropertyChanged("BirthDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCode {
            get {
                return this.CCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CCodeField, value) != true)) {
                    this.CCodeField = value;
                    this.RaisePropertyChanged("CCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkAddr {
            get {
                return this.LinkAddrField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkAddrField, value) != true)) {
                    this.LinkAddrField = value;
                    this.RaisePropertyChanged("LinkAddr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentUser {
            get {
                return this.ParentUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentUserField, value) != true)) {
                    this.ParentUserField = value;
                    this.RaisePropertyChanged("ParentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegDate {
            get {
                return this.RegDateField;
            }
            set {
                if ((this.RegDateField.Equals(value) != true)) {
                    this.RegDateField = value;
                    this.RaisePropertyChanged("RegDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrueName {
            get {
                return this.TrueNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TrueNameField, value) != true)) {
                    this.TrueNameField = value;
                    this.RaisePropertyChanged("TrueName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserMail {
            get {
                return this.UserMailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMailField, value) != true)) {
                    this.UserMailField = value;
                    this.RaisePropertyChanged("UserMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPhone {
            get {
                return this.UserPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPhoneField, value) != true)) {
                    this.UserPhoneField = value;
                    this.RaisePropertyChanged("UserPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPosition {
            get {
                return this.UserPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPositionField, value) != true)) {
                    this.UserPositionField = value;
                    this.RaisePropertyChanged("UserPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPwd {
            get {
                return this.UserPwdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPwdField, value) != true)) {
                    this.UserPwdField = value;
                    this.RaisePropertyChanged("UserPwd");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_User_Config", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_User_Config : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsRptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PopCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SoftIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CCode {
            get {
                return this.CCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CCodeField, value) != true)) {
                    this.CCodeField = value;
                    this.RaisePropertyChanged("CCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigDesc {
            get {
                return this.ConfigDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigDescField, value) != true)) {
                    this.ConfigDescField = value;
                    this.RaisePropertyChanged("ConfigDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAlert {
            get {
                return this.IsAlertField;
            }
            set {
                if ((this.IsAlertField.Equals(value) != true)) {
                    this.IsAlertField = value;
                    this.RaisePropertyChanged("IsAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsRpt {
            get {
                return this.IsRptField;
            }
            set {
                if ((this.IsRptField.Equals(value) != true)) {
                    this.IsRptField = value;
                    this.RaisePropertyChanged("IsRpt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PopCode {
            get {
                return this.PopCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PopCodeField, value) != true)) {
                    this.PopCodeField = value;
                    this.RaisePropertyChanged("PopCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SoftInterval {
            get {
                return this.SoftIntervalField;
            }
            set {
                if ((this.SoftIntervalField.Equals(value) != true)) {
                    this.SoftIntervalField = value;
                    this.RaisePropertyChanged("SoftInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_Config", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Proxy.ServiceWinToolRead.T_DTU_Config_Ext))]
    public partial class T_DTU_Config : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AINumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoardInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfigNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DINumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FlowNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsAlertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsCreateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AINum {
            get {
                return this.AINumField;
            }
            set {
                if ((this.AINumField.Equals(value) != true)) {
                    this.AINumField = value;
                    this.RaisePropertyChanged("AINum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoardInfo {
            get {
                return this.BoardInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardInfoField, value) != true)) {
                    this.BoardInfoField = value;
                    this.RaisePropertyChanged("BoardInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CType {
            get {
                return this.CTypeField;
            }
            set {
                if ((this.CTypeField.Equals(value) != true)) {
                    this.CTypeField = value;
                    this.RaisePropertyChanged("CType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigCode {
            get {
                return this.ConfigCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigCodeField, value) != true)) {
                    this.ConfigCodeField = value;
                    this.RaisePropertyChanged("ConfigCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigDesc {
            get {
                return this.ConfigDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigDescField, value) != true)) {
                    this.ConfigDescField = value;
                    this.RaisePropertyChanged("ConfigDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigName {
            get {
                return this.ConfigNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigNameField, value) != true)) {
                    this.ConfigNameField = value;
                    this.RaisePropertyChanged("ConfigName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DINum {
            get {
                return this.DINumField;
            }
            set {
                if ((this.DINumField.Equals(value) != true)) {
                    this.DINumField = value;
                    this.RaisePropertyChanged("DINum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FlowNum {
            get {
                return this.FlowNumField;
            }
            set {
                if ((this.FlowNumField.Equals(value) != true)) {
                    this.FlowNumField = value;
                    this.RaisePropertyChanged("FlowNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsAlert {
            get {
                return this.IsAlertField;
            }
            set {
                if ((this.IsAlertField.Equals(value) != true)) {
                    this.IsAlertField = value;
                    this.RaisePropertyChanged("IsAlert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsCreate {
            get {
                return this.IsCreateField;
            }
            set {
                if ((this.IsCreateField.Equals(value) != true)) {
                    this.IsCreateField = value;
                    this.RaisePropertyChanged("IsCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_Config_Ext", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_Config_Ext : Proxy.ServiceWinToolRead.T_DTU_Config {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtuidName {
            get {
                return this.DtuidNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidNameField, value) != true)) {
                    this.DtuidNameField = value;
                    this.RaisePropertyChanged("DtuidName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_PressureLevel", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_PressureLevel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressureDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PressureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressureDesc {
            get {
                return this.PressureDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureDescField, value) != true)) {
                    this.PressureDescField = value;
                    this.RaisePropertyChanged("PressureDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PressureName {
            get {
                return this.PressureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PressureNameField, value) != true)) {
                    this.PressureNameField = value;
                    this.RaisePropertyChanged("PressureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_ValveEffect", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Proxy.ServiceWinToolRead.T_DTU_ValveEffectEx))]
    public partial class T_DTU_ValveEffect : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClosedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EffctAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EffctUserNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValveCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValveNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClosedTime {
            get {
                return this.ClosedTimeField;
            }
            set {
                if ((this.ClosedTimeField.Equals(value) != true)) {
                    this.ClosedTimeField = value;
                    this.RaisePropertyChanged("ClosedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EffctArea {
            get {
                return this.EffctAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.EffctAreaField, value) != true)) {
                    this.EffctAreaField = value;
                    this.RaisePropertyChanged("EffctArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EffctUserNum {
            get {
                return this.EffctUserNumField;
            }
            set {
                if ((this.EffctUserNumField.Equals(value) != true)) {
                    this.EffctUserNumField = value;
                    this.RaisePropertyChanged("EffctUserNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValveCode {
            get {
                return this.ValveCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValveCodeField, value) != true)) {
                    this.ValveCodeField = value;
                    this.RaisePropertyChanged("ValveCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValveName {
            get {
                return this.ValveNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ValveNameField, value) != true)) {
                    this.ValveNameField = value;
                    this.RaisePropertyChanged("ValveName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_ValveEffectEx", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_ValveEffectEx : Proxy.ServiceWinToolRead.T_DTU_ValveEffect {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtuName {
            get {
                return this.DtuNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuNameField, value) != true)) {
                    this.DtuNameField = value;
                    this.RaisePropertyChanged("DtuName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupCode {
            get {
                return this.GroupCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupCodeField, value) != true)) {
                    this.GroupCodeField = value;
                    this.RaisePropertyChanged("GroupCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_DataTransmit", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_DataTransmit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsTransmitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetPhoneNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransProtocolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DtuidName {
            get {
                return this.DtuidNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidNameField, value) != true)) {
                    this.DtuidNameField = value;
                    this.RaisePropertyChanged("DtuidName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsTransmit {
            get {
                return this.IsTransmitField;
            }
            set {
                if ((this.IsTransmitField.Equals(value) != true)) {
                    this.IsTransmitField = value;
                    this.RaisePropertyChanged("IsTransmit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderNum {
            get {
                return this.OrderNumField;
            }
            set {
                if ((this.OrderNumField.Equals(value) != true)) {
                    this.OrderNumField = value;
                    this.RaisePropertyChanged("OrderNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetIP {
            get {
                return this.TargetIPField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetIPField, value) != true)) {
                    this.TargetIPField = value;
                    this.RaisePropertyChanged("TargetIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetId {
            get {
                return this.TargetIdField;
            }
            set {
                if ((this.TargetIdField.Equals(value) != true)) {
                    this.TargetIdField = value;
                    this.RaisePropertyChanged("TargetId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetPhoneNum {
            get {
                return this.TargetPhoneNumField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetPhoneNumField, value) != true)) {
                    this.TargetPhoneNumField = value;
                    this.RaisePropertyChanged("TargetPhoneNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetPort {
            get {
                return this.TargetPortField;
            }
            set {
                if ((this.TargetPortField.Equals(value) != true)) {
                    this.TargetPortField = value;
                    this.RaisePropertyChanged("TargetPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetVersion {
            get {
                return this.TargetVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetVersionField, value) != true)) {
                    this.TargetVersionField = value;
                    this.RaisePropertyChanged("TargetVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransDesc {
            get {
                return this.TransDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TransDescField, value) != true)) {
                    this.TransDescField = value;
                    this.RaisePropertyChanged("TransDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransProtocol {
            get {
                return this.TransProtocolField;
            }
            set {
                if ((object.ReferenceEquals(this.TransProtocolField, value) != true)) {
                    this.TransProtocolField = value;
                    this.RaisePropertyChanged("TransProtocol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_Device", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Proxy.ServiceWinToolRead.T_DTU_Device_Ex))]
    public partial class T_DTU_Device : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceParamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeviceSupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DtuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ProduceDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UpdateFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceBrand {
            get {
                return this.DeviceBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceBrandField, value) != true)) {
                    this.DeviceBrandField = value;
                    this.RaisePropertyChanged("DeviceBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceParams {
            get {
                return this.DeviceParamsField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceParamsField, value) != true)) {
                    this.DeviceParamsField = value;
                    this.RaisePropertyChanged("DeviceParams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceSN {
            get {
                return this.DeviceSNField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceSNField, value) != true)) {
                    this.DeviceSNField = value;
                    this.RaisePropertyChanged("DeviceSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceSupplier {
            get {
                return this.DeviceSupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceSupplierField, value) != true)) {
                    this.DeviceSupplierField = value;
                    this.RaisePropertyChanged("DeviceSupplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dtuid {
            get {
                return this.DtuidField;
            }
            set {
                if ((object.ReferenceEquals(this.DtuidField, value) != true)) {
                    this.DtuidField = value;
                    this.RaisePropertyChanged("Dtuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Memo {
            get {
                return this.MemoField;
            }
            set {
                if ((object.ReferenceEquals(this.MemoField, value) != true)) {
                    this.MemoField = value;
                    this.RaisePropertyChanged("Memo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelCode {
            get {
                return this.ModelCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelCodeField, value) != true)) {
                    this.ModelCodeField = value;
                    this.RaisePropertyChanged("ModelCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ProduceDate {
            get {
                return this.ProduceDateField;
            }
            set {
                if ((this.ProduceDateField.Equals(value) != true)) {
                    this.ProduceDateField = value;
                    this.RaisePropertyChanged("ProduceDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="T_DTU_Device_Ex", Namespace="http://schemas.datacontract.org/2004/07/Com.Winfotian.Model")]
    [System.SerializableAttribute()]
    public partial class T_DTU_Device_Ex : Proxy.ServiceWinToolRead.T_DTU_Device {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date {
            get {
                return this.DateField;
            }
            set {
                if ((object.ReferenceEquals(this.DateField, value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceWinToolRead.IWinfoToolServiceRead")]
    public interface IWinfoToolServiceRead {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetCityList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetCityListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_CityInfo> GetCityList(string ActiveKey, string Province);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetProvinceList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetProvinceListResponse")]
        System.Collections.Generic.List<string> GetProvinceList(string ActiveKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetCompanyList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetCompanyListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_Company> GetCompanyList(string ActiveKey, string CityId, string ComName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetConfigList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetConfigListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_Company_Config> GetConfigList(string ActiveKey, string ConfigId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetCompanyConfig", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetCompanyConfigResponse")]
        System.Collections.Generic.List<int> GetCompanyConfig(string ActiveKey, string CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetCompanyById", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetCompanyByIdResponse")]
        Proxy.ServiceWinToolRead.T_CompanyExtension GetCompanyById(string ActiveKey, string CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetClientTypeList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetClientTypeListResponse")]
        void GetClientTypeList(string ActiveKey, string TypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetSite", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetSiteResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_Dtu_Ex> GetSite(string ActiveKey, string Company, string Group, string SiteName, bool IsOdor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetSiteById", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetSiteByIdResponse")]
        Proxy.ServiceWinToolRead.T_Dtu_Ex GetSiteById(string ActiveKey, string DtuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetMalodorSiteById", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetMalodorSiteByIdResponse")]
        Proxy.ServiceWinToolRead.T_Dtu_Ex GetMalodorSiteById(string ActiveKey, string DtuId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetGroupByComId", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetGroupByComIdResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_GroupEx> GetGroupByComId(string ActiveKey, string CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetGroupDeatail", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetGroupDeatailResponse")]
        Proxy.ServiceWinToolRead.T_DTU_Group GetGroupDeatail(string ActiveKey, string GroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetFiledList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetFiledListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_FieldDesc> GetFiledList(string ActiveKey, string Company, string Group, string SiteName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetFiledById", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetFiledByIdResponse")]
        Proxy.ServiceWinToolRead.T_DTU_FieldDesc GetFiledById(string ActiveKey, string Id, string FieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetGroupListByCompanyID", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetGroupListByCompanyIDResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_GroupExt> GetGroupListByCompanyID(string ActiveKey, string CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetGroupByCode", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetGroupByCodeResponse")]
        Proxy.ServiceWinToolRead.T_User_GroupExt GetGroupByCode(string ActiveKey, string GroupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetDTUListByGroupCode", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetDTUListByGroupCodeResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU> GetDTUListByGroupCode(string ActiveKey, string groupCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetUserListByDTUId", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetUserListByDTUIdResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_Info> GetUserListByDTUId(string ActiveKey, string DTUId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetUserInfroByCompanyId", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetUserInfroByCompanyIdResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_Info> GetUserInfroByCompanyId(string ActiveKey, string CompanyId, string DTUId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetUserConfigListByName", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetUserConfigListByNameResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_Config> GetUserConfigListByName(string ActiveKey, string ConfigName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetUserConfigByCode", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetUserConfigByCodeResponse")]
        Proxy.ServiceWinToolRead.T_User_Config GetUserConfigByCode(string ActiveKey, string CCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetUserCoinfigList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetUserCoinfigListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_Config> GetUserCoinfigList(string ActiveKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/DtuConfigListV2", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/DtuConfigListV2Response")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Config> DtuConfigListV2(string ActiveKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/DtuConfigList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/DtuConfigListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Config_Ext> DtuConfigList(string ActiveKey, string siteName, System.Collections.Generic.List<int> cType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetPressureLevelList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetPressureLevelListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_PressureLevel> GetPressureLevelList(string ActiveKey, string levelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetOnePressureLevel", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetOnePressureLevelResponse")]
        Proxy.ServiceWinToolRead.T_DTU_PressureLevel GetOnePressureLevel(string ActiveKey, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetVerList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetVerListResponse")]
        System.Collections.Generic.Dictionary<string, string> GetVerList(string ActiveKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetInfluencList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetInfluencListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_ValveEffect> GetInfluencList(string ActiveKey, string Company, string Group, string SiteName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetInfluenceById", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetInfluenceByIdResponse")]
        Proxy.ServiceWinToolRead.T_DTU_ValveEffect GetInfluenceById(string ActiveKey, string ValveCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetExModelList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetExModelListResponse")]
        Proxy.ServiceWinToolRead.T_DTU_ValveEffectEx GetExModelList(string ActiveKey, string ValveCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetTransSetList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetTransSetListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_DataTransmit> GetTransSetList(string ActiveKey, string Company);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetTransById", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetTransByIdResponse")]
        Proxy.ServiceWinToolRead.T_DTU_DataTransmit GetTransById(string ActiveKey, string TransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetDTUConfigListByConfigName", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetDTUConfigListByConfigNameResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Config> GetDTUConfigListByConfigName(string ActiveKey, string configName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetDtuMalodorListByConfigName", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetDtuMalodorListByConfigNameResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Config> GetDtuMalodorListByConfigName(string ActiveKey, string configName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetDtuConfigByCode", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetDtuConfigByCodeResponse")]
        Proxy.ServiceWinToolRead.T_DTU_Config GetDtuConfigByCode(string ActiveKey, string conifgCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetVipDeviceList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetVipDeviceListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Device> GetVipDeviceList(string ActiveKey, string SiteName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetVipDeviceById", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetVipDeviceByIdResponse")]
        Proxy.ServiceWinToolRead.T_DTU_Device GetVipDeviceById(string ActiveKey, string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetVipDeviceExById", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetVipDeviceExByIdResponse")]
        Proxy.ServiceWinToolRead.T_DTU_Device_Ex GetVipDeviceExById(string ActiveKey, string Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetSiteListByComId", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetSiteListByComIdResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU> GetSiteListByComId(string ActiveKey, string ComId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetDTUListByCompanyId", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetDTUListByCompanyIdResponse")]
        System.Collections.Generic.Dictionary<string, string> GetDTUListByCompanyId(string ActiveKey, string CompanyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetDTUList", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetDTUListResponse")]
        System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU> GetDTUList(string ActiveKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWinfoToolServiceRead/GetSiteGroupByCode", ReplyAction="http://tempuri.org/IWinfoToolServiceRead/GetSiteGroupByCodeResponse")]
        Proxy.ServiceWinToolRead.T_DTU_GroupEx GetSiteGroupByCode(string ActiveKey, string groupCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWinfoToolServiceReadChannel : Proxy.ServiceWinToolRead.IWinfoToolServiceRead, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WinfoToolServiceReadClient : System.ServiceModel.ClientBase<Proxy.ServiceWinToolRead.IWinfoToolServiceRead>, Proxy.ServiceWinToolRead.IWinfoToolServiceRead {
        
        public WinfoToolServiceReadClient() {
        }
        
        public WinfoToolServiceReadClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WinfoToolServiceReadClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WinfoToolServiceReadClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WinfoToolServiceReadClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_CityInfo> GetCityList(string ActiveKey, string Province) {
            return base.Channel.GetCityList(ActiveKey, Province);
        }
        
        public System.Collections.Generic.List<string> GetProvinceList(string ActiveKey) {
            return base.Channel.GetProvinceList(ActiveKey);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_Company> GetCompanyList(string ActiveKey, string CityId, string ComName) {
            return base.Channel.GetCompanyList(ActiveKey, CityId, ComName);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_Company_Config> GetConfigList(string ActiveKey, string ConfigId) {
            return base.Channel.GetConfigList(ActiveKey, ConfigId);
        }
        
        public System.Collections.Generic.List<int> GetCompanyConfig(string ActiveKey, string CompanyId) {
            return base.Channel.GetCompanyConfig(ActiveKey, CompanyId);
        }
        
        public Proxy.ServiceWinToolRead.T_CompanyExtension GetCompanyById(string ActiveKey, string CompanyId) {
            return base.Channel.GetCompanyById(ActiveKey, CompanyId);
        }
        
        public void GetClientTypeList(string ActiveKey, string TypeId) {
            base.Channel.GetClientTypeList(ActiveKey, TypeId);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_Dtu_Ex> GetSite(string ActiveKey, string Company, string Group, string SiteName, bool IsOdor) {
            return base.Channel.GetSite(ActiveKey, Company, Group, SiteName, IsOdor);
        }
        
        public Proxy.ServiceWinToolRead.T_Dtu_Ex GetSiteById(string ActiveKey, string DtuId) {
            return base.Channel.GetSiteById(ActiveKey, DtuId);
        }
        
        public Proxy.ServiceWinToolRead.T_Dtu_Ex GetMalodorSiteById(string ActiveKey, string DtuId) {
            return base.Channel.GetMalodorSiteById(ActiveKey, DtuId);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_GroupEx> GetGroupByComId(string ActiveKey, string CompanyId) {
            return base.Channel.GetGroupByComId(ActiveKey, CompanyId);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_Group GetGroupDeatail(string ActiveKey, string GroupId) {
            return base.Channel.GetGroupDeatail(ActiveKey, GroupId);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_FieldDesc> GetFiledList(string ActiveKey, string Company, string Group, string SiteName) {
            return base.Channel.GetFiledList(ActiveKey, Company, Group, SiteName);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_FieldDesc GetFiledById(string ActiveKey, string Id, string FieldName) {
            return base.Channel.GetFiledById(ActiveKey, Id, FieldName);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_GroupExt> GetGroupListByCompanyID(string ActiveKey, string CompanyId) {
            return base.Channel.GetGroupListByCompanyID(ActiveKey, CompanyId);
        }
        
        public Proxy.ServiceWinToolRead.T_User_GroupExt GetGroupByCode(string ActiveKey, string GroupCode) {
            return base.Channel.GetGroupByCode(ActiveKey, GroupCode);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU> GetDTUListByGroupCode(string ActiveKey, string groupCode) {
            return base.Channel.GetDTUListByGroupCode(ActiveKey, groupCode);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_Info> GetUserListByDTUId(string ActiveKey, string DTUId) {
            return base.Channel.GetUserListByDTUId(ActiveKey, DTUId);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_Info> GetUserInfroByCompanyId(string ActiveKey, string CompanyId, string DTUId) {
            return base.Channel.GetUserInfroByCompanyId(ActiveKey, CompanyId, DTUId);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_Config> GetUserConfigListByName(string ActiveKey, string ConfigName) {
            return base.Channel.GetUserConfigListByName(ActiveKey, ConfigName);
        }
        
        public Proxy.ServiceWinToolRead.T_User_Config GetUserConfigByCode(string ActiveKey, string CCode) {
            return base.Channel.GetUserConfigByCode(ActiveKey, CCode);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_User_Config> GetUserCoinfigList(string ActiveKey) {
            return base.Channel.GetUserCoinfigList(ActiveKey);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Config> DtuConfigListV2(string ActiveKey) {
            return base.Channel.DtuConfigListV2(ActiveKey);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Config_Ext> DtuConfigList(string ActiveKey, string siteName, System.Collections.Generic.List<int> cType) {
            return base.Channel.DtuConfigList(ActiveKey, siteName, cType);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_PressureLevel> GetPressureLevelList(string ActiveKey, string levelName) {
            return base.Channel.GetPressureLevelList(ActiveKey, levelName);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_PressureLevel GetOnePressureLevel(string ActiveKey, string id) {
            return base.Channel.GetOnePressureLevel(ActiveKey, id);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetVerList(string ActiveKey) {
            return base.Channel.GetVerList(ActiveKey);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_ValveEffect> GetInfluencList(string ActiveKey, string Company, string Group, string SiteName) {
            return base.Channel.GetInfluencList(ActiveKey, Company, Group, SiteName);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_ValveEffect GetInfluenceById(string ActiveKey, string ValveCode) {
            return base.Channel.GetInfluenceById(ActiveKey, ValveCode);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_ValveEffectEx GetExModelList(string ActiveKey, string ValveCode) {
            return base.Channel.GetExModelList(ActiveKey, ValveCode);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_DataTransmit> GetTransSetList(string ActiveKey, string Company) {
            return base.Channel.GetTransSetList(ActiveKey, Company);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_DataTransmit GetTransById(string ActiveKey, string TransId) {
            return base.Channel.GetTransById(ActiveKey, TransId);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Config> GetDTUConfigListByConfigName(string ActiveKey, string configName) {
            return base.Channel.GetDTUConfigListByConfigName(ActiveKey, configName);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Config> GetDtuMalodorListByConfigName(string ActiveKey, string configName) {
            return base.Channel.GetDtuMalodorListByConfigName(ActiveKey, configName);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_Config GetDtuConfigByCode(string ActiveKey, string conifgCode) {
            return base.Channel.GetDtuConfigByCode(ActiveKey, conifgCode);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU_Device> GetVipDeviceList(string ActiveKey, string SiteName) {
            return base.Channel.GetVipDeviceList(ActiveKey, SiteName);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_Device GetVipDeviceById(string ActiveKey, string Id) {
            return base.Channel.GetVipDeviceById(ActiveKey, Id);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_Device_Ex GetVipDeviceExById(string ActiveKey, string Id) {
            return base.Channel.GetVipDeviceExById(ActiveKey, Id);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU> GetSiteListByComId(string ActiveKey, string ComId) {
            return base.Channel.GetSiteListByComId(ActiveKey, ComId);
        }
        
        public System.Collections.Generic.Dictionary<string, string> GetDTUListByCompanyId(string ActiveKey, string CompanyId) {
            return base.Channel.GetDTUListByCompanyId(ActiveKey, CompanyId);
        }
        
        public System.Collections.Generic.List<Proxy.ServiceWinToolRead.T_DTU> GetDTUList(string ActiveKey) {
            return base.Channel.GetDTUList(ActiveKey);
        }
        
        public Proxy.ServiceWinToolRead.T_DTU_GroupEx GetSiteGroupByCode(string ActiveKey, string groupCode) {
            return base.Channel.GetSiteGroupByCode(ActiveKey, groupCode);
        }
    }
}
