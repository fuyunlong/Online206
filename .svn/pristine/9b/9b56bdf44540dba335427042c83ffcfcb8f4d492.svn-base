using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Com.Winfotian.Common;
using Com.Winfotian.DB;
using Com.Winfotian.ServiceProxy;
using Com.Winfotian.ServiceProxy.UpdateService;
using System.Text;
using Com.Winfotian.Proxy;
using WinfoToolSys.Pms;
using System.Reflection;
using System.ComponentModel;

namespace WinfoToolSys.Controllers.ClientMng
{
    public class ConfigController : Controller
    {
        //
        // GET: /Config/
        public ActionResult ShowConfigList()
        {
            return View();
        }

        //查询配置信息
        public JsonResult GetConfigByName(string configName)
        {
            List<ServiceCrmGet.T_CompanyComfigs> list = new ServiceCrmGet.CRMSGetClient().GetListConfiginfo("", configName, "");
            return Json(list);
        }

        //查询所有配置信息
        public JsonResult GetConfigList()
        {
            List<ServiceCrmGet.T_CompanyComfigs> list = new List<ServiceCrmGet.T_CompanyComfigs>();
            try
            {
                list = new ServiceCrmGet.CRMSGetClient().GetCompanyConfigs("");
            }
            catch (Exception ex)
            {
                LogBLL.WriteExceptionLog(WinManager.GetPublicIP(), Pms.PmsMng.LogUser, ex);
            }
            return Json(list);
        }

        //根据公司id查询配置信息
        public JsonResult GetCompanyConfig(string CompanyId)
        {
            List<ServiceCrmGet.T_CompanyComfigs> list = new ServiceCrmGet.CRMSGetClient().GetCompanyConfig(CompanyId, "");
            return Json(list);
        }

        //添加、详细、修改页面
        public ActionResult ShowOper(string oper, string configId)
        {
            StringBuilder sb = new StringBuilder();
            ServiceCrmGet.T_CompanyComfigs config = new ServiceCrmGet.CRMSGetClient().GetCompanyConfigID(configId, "");

            switch (oper)
            {
                case "Show":
                    ViewBag.Oper = "Show";
                    break;
                case "Edit":
                    ViewBag.Oper = "Edit";
                    sb.Append("<input type='button' class='buttonVer2' value='修改' onclick='Config.UpdateConfig();' />");
                    break;
                case "Add":
                    ViewBag.Oper = "Add";
                    sb.Append("<input type='button' class='buttonVer2' value='添加' onclick='Config.AddConfig();' />");
                    break;
                default:
                    break;
            }
            sb.Insert(0, "\"");
            sb.Append("\"");
            ViewBag.Button = sb.ToString();
            return View(config);
        }

        //添加配置
        public string Add(ServiceCrmPost.T_CompanyComfigs model)
        {
            string result = "false";
            if (new ServiceCrmPost.CRMSPostClient().AddConfigInfo(model, ""))
            {
                result = "true";
            }
            return result;
        }

        //删除配置
        public string Delete(string configId)
        {
            string result = "false";
            if (new ServiceCrmPost.CRMSPostClient().ChangeConfigStatus(configId, 0, ""))
            {
                result = "true";
            }
            return result;
        }

        //修改配置
        public string Update(ServiceCrmPost.T_CompanyComfigs model)
        {
            string result = "false";
            if (new ServiceCrmPost.CRMSPostClient().UpdateCompanyConfig(model, ""))
            {
                result = "true";
            }
            return result;
        }
    }
}
