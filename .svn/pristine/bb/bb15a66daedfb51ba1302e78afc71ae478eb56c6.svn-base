using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Com.Winfotian.Common;
using Com.Winfotian.DB;
using Com.Winfotian.Model;
using Com.Winfotian.Proxy;
using WinfoToolSys.Pms;
using System.Web.Script.Serialization;
using WinfoToolSys.ServiceCrmGet;


namespace WinfoToolSys.Controllers.SiteMng
{
    public class ValveInfluenceController : Controller
    {
        //
        // GET: /ValveInfluence/
        public ActionResult Index()
        {
            ViewBag.CompanyList = new ServiceProxyRead().GetProxy().GetCompanyList(PmsMng.ActiveKey, "", "");
            return View();
        }

        //获取阀门影响列表
        public JsonResult GetInfluencList()
        {
            string company = HttpContext.Request.Form["Company"].ToString();
            string Group = HttpContext.Request.Form["Group"].ToString();
            string SiteName = HttpContext.Request.Form["SiteName"].ToString();
            var list = new List<T_DTU_ValveEffect>();
            try
            {
                list = new ServiceProxyRead().GetProxy().GetInfluencList(PmsMng.ActiveKey, company, Group, SiteName);
            }
            catch (Exception ex)
            {
                LogBLL.WriteExceptionLog(WinManager.GetPublicIP(), "", ex);
            }
            return Json(list);
        }

        //显示阀门列表详细
        public ActionResult InfuenceViewShow(string id)
        {
            GetT_DTU_ValveEffectExObj(id);
            return View();
        }



        //阀门编辑
        public ActionResult InfuenceViewEdit(string id)
        {
            GetT_DTU_ValveEffectExObj(id);
            return View();
        }

        public string InfuenceActionEdit(T_DTU_ValveEffect tdv)
        {
            string rlst = "0";
            try
            {
                if (new ServiceProxyWrite().GetProxy().UpdateInfluence(PmsMng.ActiveKey, tdv, PmsMng.LogUser))
                { rlst = "1"; }
            }
            catch (Exception ex)
            {
                LogBLL.WriteExceptionLog(WinManager.GetPublicIP(), PmsMng.LogUser, ex);
            }
            return rlst;
        }

        //阀门添加
        public ActionResult InfuenceViewAdd(string id)
        {
            ViewBag.CompanyList = new ServiceProxyRead().GetProxy().GetCompanyList(PmsMng.ActiveKey, "", "");
            return View();
        }

        public string InfuenceActionAdd(T_DTU_ValveEffect tdv)
        {
            string rslt = "0";
            try
            {
                if (new ServiceProxyWrite().GetProxy().AddInfluence(PmsMng.ActiveKey, tdv))
                {
                    rslt = "1";
                }
            }
            catch (Exception ex)
            {
                LogBLL.WriteExceptionLog(WinManager.GetPublicIP(), PmsMng.LogUser, ex);
            }
            return rslt;
        }

        //删除
        public ActionResult InfuenceViewDelete(string id)
        {
            return View();
        }

        public string InfuenceActionDelete(string id)
        {
            string rslt = "0";
            try
            {
                if (new ServiceProxyWrite().GetProxy().DeleteInfluence(PmsMng.ActiveKey, id, PmsMng.LogUser))
                { rslt = "1"; }
            }
            catch (Exception ex)
            {
                LogBLL.WriteExceptionLog(WinManager.GetPublicIP(), PmsMng.LogUser, ex);
            }
            return rslt;
        }


        #region Privite
        private void GetT_DTU_ValveEffectExObj(string valuecode)
        {
            List<T_CompanyInfos> ComList = new JavaScriptSerializer().Deserialize<List<T_CompanyInfos>>(new CRMSGetClient().GetListCompany(0, PmsMng.ActiveKey));//获取所有公司列表
          
            ViewBag.CompanyList = ComList;
            T_DTU_ValveEffectEx obj = new ServiceProxyRead().GetProxy().GetExModelList(PmsMng.ActiveKey, valuecode);
            if (obj != null)
            {
                foreach (var a in ComList)
                {
                    if (obj.CompanyId == a.CompanyID)
                    {
                        obj.CompanyName = a.CompanyName;
                        break;
                    }
                }
            }
            ViewBag.obj = obj;
        }

        #endregion
    }
}
