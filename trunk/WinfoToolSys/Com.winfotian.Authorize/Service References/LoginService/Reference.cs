//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Com.winfotian.Authorize.LoginService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.artech.com", ConfigurationName="LoginService.LoginService")]
    public interface LoginService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/LoginService/UserLogin", ReplyAction="http://www.artech.com/LoginService/UserLoginResponse")]
        string UserLogin(string userName, string pwd, string identCodeOrIP, string systemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/LoginService/UserLogin", ReplyAction="http://www.artech.com/LoginService/UserLoginResponse")]
        System.Threading.Tasks.Task<string> UserLoginAsync(string userName, string pwd, string identCodeOrIP, string systemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/LoginService/CheckIfUserLgoin", ReplyAction="http://www.artech.com/LoginService/CheckIfUserLgoinResponse")]
        string CheckIfUserLgoin(string guid, string systemCode, string identCodeOrIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/LoginService/CheckIfUserLgoin", ReplyAction="http://www.artech.com/LoginService/CheckIfUserLgoinResponse")]
        System.Threading.Tasks.Task<string> CheckIfUserLgoinAsync(string guid, string systemCode, string identCodeOrIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/LoginService/UserLogin2", ReplyAction="http://www.artech.com/LoginService/UserLogin2Response")]
        string UserLogin2(string userName, string pwd, string identCodeOrIP, string smsCode, string systemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/LoginService/UserLogin2", ReplyAction="http://www.artech.com/LoginService/UserLogin2Response")]
        System.Threading.Tasks.Task<string> UserLogin2Async(string userName, string pwd, string identCodeOrIP, string smsCode, string systemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/LoginService/GetValiKey", ReplyAction="http://www.artech.com/LoginService/GetValiKeyResponse")]
        string GetValiKey(string userName, string systemCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/LoginService/GetValiKey", ReplyAction="http://www.artech.com/LoginService/GetValiKeyResponse")]
        System.Threading.Tasks.Task<string> GetValiKeyAsync(string userName, string systemCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LoginServiceChannel : Com.winfotian.Authorize.LoginService.LoginService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginServiceClient : System.ServiceModel.ClientBase<Com.winfotian.Authorize.LoginService.LoginService>, Com.winfotian.Authorize.LoginService.LoginService {
        
        public LoginServiceClient() {
        }
        
        public LoginServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string UserLogin(string userName, string pwd, string identCodeOrIP, string systemCode) {
            return base.Channel.UserLogin(userName, pwd, identCodeOrIP, systemCode);
        }
        
        public System.Threading.Tasks.Task<string> UserLoginAsync(string userName, string pwd, string identCodeOrIP, string systemCode) {
            return base.Channel.UserLoginAsync(userName, pwd, identCodeOrIP, systemCode);
        }
        
        public string CheckIfUserLgoin(string guid, string systemCode, string identCodeOrIP) {
            return base.Channel.CheckIfUserLgoin(guid, systemCode, identCodeOrIP);
        }
        
        public System.Threading.Tasks.Task<string> CheckIfUserLgoinAsync(string guid, string systemCode, string identCodeOrIP) {
            return base.Channel.CheckIfUserLgoinAsync(guid, systemCode, identCodeOrIP);
        }
        
        public string UserLogin2(string userName, string pwd, string identCodeOrIP, string smsCode, string systemCode) {
            return base.Channel.UserLogin2(userName, pwd, identCodeOrIP, smsCode, systemCode);
        }
        
        public System.Threading.Tasks.Task<string> UserLogin2Async(string userName, string pwd, string identCodeOrIP, string smsCode, string systemCode) {
            return base.Channel.UserLogin2Async(userName, pwd, identCodeOrIP, smsCode, systemCode);
        }
        
        public string GetValiKey(string userName, string systemCode) {
            return base.Channel.GetValiKey(userName, systemCode);
        }
        
        public System.Threading.Tasks.Task<string> GetValiKeyAsync(string userName, string systemCode) {
            return base.Channel.GetValiKeyAsync(userName, systemCode);
        }
    }
}
